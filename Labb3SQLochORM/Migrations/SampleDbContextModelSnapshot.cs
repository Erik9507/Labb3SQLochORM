// <auto-generated />
using System;
using Labb3SQLochORM.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Labb3SQLochORM.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    partial class SampleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Labb3SQLochORM.Models.Befattning", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Befattning1")
                        .IsRequired()
                        .HasColumnName("befattning")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Befattning");
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.Elev", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ENamn")
                        .IsRequired()
                        .HasColumnName("eNamn")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FNamn")
                        .IsRequired()
                        .HasColumnName("fNamn")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("KlassId")
                        .HasColumnName("klassId")
                        .HasColumnType("int");

                    b.Property<int>("PersonNummer")
                        .HasColumnName("personNummer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlassId");

                    b.ToTable("Elev");
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.ElevKurser", b =>
                {
                    b.Property<DateTime?>("BetygDatum")
                        .HasColumnName("betygDatum")
                        .HasColumnType("date");

                    b.Property<int?>("FElevId")
                        .HasColumnName("fElevId")
                        .HasColumnType("int");

                    b.Property<string>("FKursBetyg")
                        .HasColumnName("fKursBetyg")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("FKursId")
                        .HasColumnName("fKursId")
                        .HasColumnType("int");

                    b.HasIndex("FElevId");

                    b.HasIndex("FKursId");

                    b.ToTable("elevKurser");
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.Klass", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AntalElever")
                        .HasColumnName("antalElever")
                        .HasColumnType("int");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SkolaId")
                        .HasColumnName("skolaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkolaId");

                    b.ToTable("Klass");
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.Kurs", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("KursNamn")
                        .IsRequired()
                        .HasColumnName("kursNamn")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("LärarId")
                        .HasColumnName("lärarID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LärarId");

                    b.ToTable("Kurs");
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.Personal", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("BefattningsId")
                        .HasColumnName("befattningsID")
                        .HasColumnType("int");

                    b.Property<string>("ENamn")
                        .IsRequired()
                        .HasColumnName("eNamn")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FNamn")
                        .IsRequired()
                        .HasColumnName("fNamn")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SkolId")
                        .HasColumnName("skolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BefattningsId");

                    b.ToTable("Personal");
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.Skola", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("SkolNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Skola");
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.Elev", b =>
                {
                    b.HasOne("Labb3SQLochORM.Models.Klass", "Klass")
                        .WithMany("Elev")
                        .HasForeignKey("KlassId")
                        .HasConstraintName("FK_Elev_Klass")
                        .IsRequired();
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.ElevKurser", b =>
                {
                    b.HasOne("Labb3SQLochORM.Models.Elev", "FElev")
                        .WithMany()
                        .HasForeignKey("FElevId")
                        .HasConstraintName("FK_elevKurser_Elev");

                    b.HasOne("Labb3SQLochORM.Models.Kurs", "FKurs")
                        .WithMany()
                        .HasForeignKey("FKursId")
                        .HasConstraintName("FK_elevKurser_Kurs");
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.Klass", b =>
                {
                    b.HasOne("Labb3SQLochORM.Models.Skola", "Skola")
                        .WithMany("Klass")
                        .HasForeignKey("SkolaId")
                        .HasConstraintName("FK_Klass_Skola")
                        .IsRequired();
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.Kurs", b =>
                {
                    b.HasOne("Labb3SQLochORM.Models.Personal", "Lärar")
                        .WithMany("Kurs")
                        .HasForeignKey("LärarId")
                        .HasConstraintName("FK_Kurs_Personal");
                });

            modelBuilder.Entity("Labb3SQLochORM.Models.Personal", b =>
                {
                    b.HasOne("Labb3SQLochORM.Models.Befattning", "Befattnings")
                        .WithMany("Personal")
                        .HasForeignKey("BefattningsId")
                        .HasConstraintName("FK_Personal_Befattning")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
